export default function NewsItem({ newDescriptor }) {
  // 拖一下时间 卡帧
  // js一个时间段只能做一件事情，在当前帧走500段for循环，那他就没有精力去响应用户的点击
  // concurrency ---> 任务拆分 的最小单元是组件 归根结底组件加载的时间太长了 而concurrency拆分任务的最小单元是组件和react元素
  // 也就是说，正常情况下，所有的组件合在一起渲染，是要花费2秒钟，那在这2秒钟之内，用户的所有响应全部失效
  // 那么有了concurrency以后，react会把这么多合在一起的组件拆分成最小单元塞入每一帧里 每个组件就有了自己的执行时长
  // 那只要单个组件的执行周期不超过16ms,就不会卡帧

  // 但是，如果单个组件执行超过了16ms,依旧会出现卡帧
  // 本质上是因为News这个组件执行的渲染时间太长了
  // 换句话来讲 我们是不是希望切换tab这个行为的【优先级】要高于News页面渲染的【优先级】
  // 我们希望从首页 ---> 新闻列表 ---> 关于我们 这时候新闻列表的渲染工作直接被react手动强制中断
  for (let i = 0; i < 1200; i++) {
    console.log("i", i);
  }
  return <div>NewsItem:{newDescriptor}</div>;
}
